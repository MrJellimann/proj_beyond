<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Movement
v_spd = 0;
h_spd = 0;
spd_max = 3;
spd_amount = spd_max / 4;

// Animations
image_speed = 0;
_facing = 'r';
_leg_sprite_left = sprite_index;
_leg_sprite_right = sprite_index;
_torso_sprite = sprite_index;
_leg_index = 0;
_cloaked = false;

// Combat
k_v_spd = 0;
k_h_spd = 0;
look_dir = 0;
weapon_length = 20;
can_shoot = 0;

// Stats
max_hp = 10;
_hp = max_hp;

// Other
_center_offset = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Horizontal
if (h_spd != 0)
{
    if (place_free(x + h_spd, y) &amp;&amp; onFloor(x + h_spd, y) &amp;&amp; !onWall(x + h_spd, y))
        x += h_spd;
    else
    {
        while (place_free(x + sign(h_spd), y) &amp;&amp; onFloor(x + sign(h_spd), y) &amp;&amp; !onWall(x + sign(h_spd), y))
        {
            x += sign(h_spd);
        }
    }
}

// Horizontal knockback
if (k_h_spd != 0)
{
    if (place_free(x + k_h_spd, y) &amp;&amp; onFloor(x + k_h_spd, y) &amp;&amp; !onWall(x + k_h_spd, y))
        x += k_h_spd;
    else
    {
        while (place_free(x + sign(k_h_spd), y) &amp;&amp; onFloor(x + sign(k_h_spd), y) &amp;&amp; !onWall(x + sign(k_h_spd), y))
        {
            x += sign(k_h_spd);
        }
    }
}

// Vertical
if (v_spd != 0)
{
    if (place_free(x, y + v_spd) &amp;&amp; onFloor(x, y + v_spd) &amp;&amp; !onWall(x, y + v_spd))
        y += v_spd;
    else
    {
        while (place_free(x, y + sign(v_spd)) &amp;&amp; onFloor(x, y + sign(v_spd)) &amp;&amp; !onWall(x, y + sign(v_spd)))
        {
            y += sign(v_spd);
        }
    }
}

// Vertical knockback
if (k_v_spd != 0)
{
    if (place_free(x, y + k_v_spd) &amp;&amp; onFloor(x, y + k_v_spd) &amp;&amp; !onWall(x, y + k_v_spd))
        y += k_v_spd;
    else
    {
        while (place_free(x, y + sign(k_v_spd)) &amp;&amp; onFloor(x, y + sign(k_v_spd)) &amp;&amp; !onWall(x, y + sign(k_v_spd)))
        {
            y += sign(k_v_spd);
        }
    }
}

// Recover from knockback
if (abs(k_h_spd) &gt; 0.5)
    k_h_spd *= 0.75;
else
    k_h_spd = 0;

if (abs(k_v_spd) &gt; 0.5)
    k_v_spd *= 0.75;
else
    k_v_spd = 0;

// Life and Death
if (_hp &lt;= 0)
{
    instance_destroy();
}

// Can Shoot
if (can_shoot &gt; 0)
    can_shoot--;

// Facing
if (look_dir &lt; 90 || look_dir &gt;= 270)
    _facing = 'r';
else
    _facing = 'l';
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
